version: "3.8"

services:
  currencies-api:
    restart: on-failure
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - postgres-migration
    env_file:
      .env
    networks:
      - currencies


  currencies-worker:
    restart: on-failure
    build: 
      context: .
      dockerfile: worker.Dockerfile
    depends_on:
      - postgres-migration
    env_file:
      .env
    networks:
      - currencies

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      .env
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    expose:
      - ${POSTGRES_PORT}
    networks:
      - currencies
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres-migration:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - currencies
    volumes:
      - ./migrations:/migrations 
    command: ["-path", "/migrations/postgres", "-database",  "postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_port}/${POSTGRES_DATABASE}?sslmode=disable", "up"]

  swagger:
    image: swaggerapi/swagger-ui
    restart: always
    container_name: swagger
    ports:
      - "${SWAGGER_PORT}:8080"
    environment:
      SWAGGER_JSON: "/docs/swagger.json"
    volumes:
      - ./docs:/docs

networks:
  currencies:
